app JoRa {
  wasp: {
    version: "^0.11.4"
  },
  title: "JoRa",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int      @id @default(autoincrement())
    username String   @unique
    password String
    courses  Course[]
psl=}

entity Course {=psl
    id         Int    @id @default(autoincrement())
    title      String
    content    String
    youtubeUrl String
    users      User   @relation(fields: [userId], references: [id])
    userId     Int
psl=}

action createCourse {
  fn: import { createCourse } from "@server/actions.js",
  entities: [Course]
}

action registerCourse {
  fn: import { registerCourse } from "@server/actions.js",
  entities: [User, Course]
}

action makePayment {
  fn: import { makePayment } from "@server/actions.js",
  entities: [User, Course]
}

query getCourse {
  fn: import { getCourse } from "@server/queries.js",
  entities: [Course]
}

query getUserCourses {
  fn: import { getUserCourses } from "@server/queries.js",
  entities: [User, Course]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { DashboardPage } from "@client/pages/Dashboard.jsx",
  authRequired: true
}

route CourseRoute { path: "/course/:courseId", to: CoursePage }
page CoursePage {
  component: import { CoursePage } from "@client/pages/Course.jsx",
  authRequired: true
}
